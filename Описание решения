Технические задачи

Improvement: Добавить иконку мячика, если футболист забил гол

Я решила добавить новое числовое свойство у класса Player которое будет хранить количество забитых игроком голов.
Этому свойству конструкторе задается значение 0
    Также добавила функцию у игрока madeGoal(), которая увеличивает количество голов на один.
Функция вызывается у игрока в методе processLogs() сервиса MatchBuilder в случае события 'goal'.

    В шаблоне twig добавила рендеринг иконки мяча в цикле если свойство goal у игрока больше ноля.
Иконка мяча выводиться столько раз сколько футболист забил гол.


Improvement: Добавить отображение желтых и красных карточек напротив футболистов, которые получили карточки

    Я добавила классу Player свойства $yellowCard и $redCard типа bool, также методы
gotYellowCard() и gotRedCard(). Во время создания игрока в конструкторе свойствам $yellowCard и $redCard
присваивается значение false.
    В методе processLogs() сервиса MatchBuilder я добавила дополнительные условия case 'yellowCard' и case 'redCard'.

    В случае события 'redCard' у угрока вызывается метод gotRedCard() в который передается текущая минута $minute.
Этот метод обновляет свойтво redCard на true и вызывает метод goToBench() с переданой текущей минутой,
поскольку красная карта означает дисквалификацию игрока.
    В случае события 'yellowCard' у игрока получившего карточку вызывается метод gotYellowCard(), который
сначала проверяет текущее состояние свойства yellowCard с помощью оператора if. Если свойство yellowCard
уже является правдой (то есть у игрока уже есть одна желтая карточка и сейчас он получает вторую, которая в футболе
приравнивается к получению красной карты) выполняется первое условие в  котором у игрока  вызывается метод gotRedCard().
В противном случае(если свойство yellowCard равняется false и игрок получает первую желтую карточку)  свойству
yellowCard присваивается значение true.

    В twig шаблоне после вывода имени игока я добавила проверку свойства redCard, если оно true выволиться иконка
красной карточки, если же нет проверяется свойство yellowCard и если оно правдиво выводится иконка желтой карты.


Feature: Добавить таблицу с общим временем, проведенным на поле, для каждой позиции (нападающие, защитники и т.д.),
а не только для каждого игрока

    Я добавила классу Team константы по имени каждой позиции в футболе. Константы равняются коду position как представленно
в json файле - исходнике для игроков. Также добавила константу POSITIONS из массива названий позиций на русском языке и
соответсвующим им константам
с кодом позиции.
    Еще добавила новое свойство в виде массива  positionInfo, который создается динамически в конструкторе класса на основании
константы POSITIONS. Массив содержит в себе  массивы с информацией для каждой позиции, ключом является код позиции
(то как указаны позиции в описании игрока в источнике json), в значении хранятся название на русском
(чтобы можно было выводить для пользователя в таблице) и время. Времени присваевается значение 0. Классу Team также добавлен новый метод
updatePositionTime() который принимает код позиции и время и добавляет полученное время ко времени нужной позиции
    В сервисе MatchBuilder добавлен новый метод savePositionTimes() который получает на входе команду
и для каждого игрока команды проверяет время, если

    После окончания матча в методе processLogs() сервиса MatchBuilder (то есть когда событие равно finishPeriod и период равен 2)
после того как вызван метод goToBenchAllPlayers()

В этом случае если формат кода позиции в json файле  поменяется его можно будет изменить в одном месте,
просто обновив значение константы.




Bug: Исправить ошибку с подсчетом времени, проведенном на поле
